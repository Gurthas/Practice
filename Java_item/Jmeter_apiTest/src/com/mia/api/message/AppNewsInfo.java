/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.mia.api.message;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 站内信结构体
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-01-09")
public class AppNewsInfo implements org.apache.thrift.TBase<AppNewsInfo, AppNewsInfo._Fields>, java.io.Serializable, Cloneable, Comparable<AppNewsInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AppNewsInfo");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField CONTENT_FIELD_DESC = new org.apache.thrift.protocol.TField("content", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField RESOURCE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_type", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField RESOURCE_SUB_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_sub_type", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CUSTOM_TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_title", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CUSTOM_PHOTO_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_photo", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CUSTOM_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("custom_url", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField RESOURCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("resource_id", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField SEND_FROM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("send_from_id", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField VALID_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("valid_time", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("created", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AppNewsInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AppNewsInfoTupleSchemeFactory());
  }

  public int id; // required
  public String content; // required
  public String type; // required
  public String resource_type; // required
  public String resource_sub_type; // required
  public String custom_title; // required
  public String custom_photo; // required
  public String custom_url; // required
  public int resource_id; // required
  public int send_from_id; // required
  public String valid_time; // required
  public String created; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    CONTENT((short)2, "content"),
    TYPE((short)3, "type"),
    RESOURCE_TYPE((short)4, "resource_type"),
    RESOURCE_SUB_TYPE((short)5, "resource_sub_type"),
    CUSTOM_TITLE((short)6, "custom_title"),
    CUSTOM_PHOTO((short)7, "custom_photo"),
    CUSTOM_URL((short)8, "custom_url"),
    RESOURCE_ID((short)9, "resource_id"),
    SEND_FROM_ID((short)10, "send_from_id"),
    VALID_TIME((short)11, "valid_time"),
    CREATED((short)12, "created");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // CONTENT
          return CONTENT;
        case 3: // TYPE
          return TYPE;
        case 4: // RESOURCE_TYPE
          return RESOURCE_TYPE;
        case 5: // RESOURCE_SUB_TYPE
          return RESOURCE_SUB_TYPE;
        case 6: // CUSTOM_TITLE
          return CUSTOM_TITLE;
        case 7: // CUSTOM_PHOTO
          return CUSTOM_PHOTO;
        case 8: // CUSTOM_URL
          return CUSTOM_URL;
        case 9: // RESOURCE_ID
          return RESOURCE_ID;
        case 10: // SEND_FROM_ID
          return SEND_FROM_ID;
        case 11: // VALID_TIME
          return VALID_TIME;
        case 12: // CREATED
          return CREATED;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __RESOURCE_ID_ISSET_ID = 1;
  private static final int __SEND_FROM_ID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CONTENT, new org.apache.thrift.meta_data.FieldMetaData("content", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESOURCE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("resource_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESOURCE_SUB_TYPE, new org.apache.thrift.meta_data.FieldMetaData("resource_sub_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM_TITLE, new org.apache.thrift.meta_data.FieldMetaData("custom_title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM_PHOTO, new org.apache.thrift.meta_data.FieldMetaData("custom_photo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CUSTOM_URL, new org.apache.thrift.meta_data.FieldMetaData("custom_url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESOURCE_ID, new org.apache.thrift.meta_data.FieldMetaData("resource_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SEND_FROM_ID, new org.apache.thrift.meta_data.FieldMetaData("send_from_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VALID_TIME, new org.apache.thrift.meta_data.FieldMetaData("valid_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED, new org.apache.thrift.meta_data.FieldMetaData("created", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AppNewsInfo.class, metaDataMap);
  }

  public AppNewsInfo() {
  }

  public AppNewsInfo(
    int id,
    String content,
    String type,
    String resource_type,
    String resource_sub_type,
    String custom_title,
    String custom_photo,
    String custom_url,
    int resource_id,
    int send_from_id,
    String valid_time,
    String created)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.content = content;
    this.type = type;
    this.resource_type = resource_type;
    this.resource_sub_type = resource_sub_type;
    this.custom_title = custom_title;
    this.custom_photo = custom_photo;
    this.custom_url = custom_url;
    this.resource_id = resource_id;
    setResource_idIsSet(true);
    this.send_from_id = send_from_id;
    setSend_from_idIsSet(true);
    this.valid_time = valid_time;
    this.created = created;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AppNewsInfo(AppNewsInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetContent()) {
      this.content = other.content;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetResource_type()) {
      this.resource_type = other.resource_type;
    }
    if (other.isSetResource_sub_type()) {
      this.resource_sub_type = other.resource_sub_type;
    }
    if (other.isSetCustom_title()) {
      this.custom_title = other.custom_title;
    }
    if (other.isSetCustom_photo()) {
      this.custom_photo = other.custom_photo;
    }
    if (other.isSetCustom_url()) {
      this.custom_url = other.custom_url;
    }
    this.resource_id = other.resource_id;
    this.send_from_id = other.send_from_id;
    if (other.isSetValid_time()) {
      this.valid_time = other.valid_time;
    }
    if (other.isSetCreated()) {
      this.created = other.created;
    }
  }

  public AppNewsInfo deepCopy() {
    return new AppNewsInfo(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.content = null;
    this.type = null;
    this.resource_type = null;
    this.resource_sub_type = null;
    this.custom_title = null;
    this.custom_photo = null;
    this.custom_url = null;
    setResource_idIsSet(false);
    this.resource_id = 0;
    setSend_from_idIsSet(false);
    this.send_from_id = 0;
    this.valid_time = null;
    this.created = null;
  }

  public int getId() {
    return this.id;
  }

  public AppNewsInfo setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getContent() {
    return this.content;
  }

  public AppNewsInfo setContent(String content) {
    this.content = content;
    return this;
  }

  public void unsetContent() {
    this.content = null;
  }

  /** Returns true if field content is set (has been assigned a value) and false otherwise */
  public boolean isSetContent() {
    return this.content != null;
  }

  public void setContentIsSet(boolean value) {
    if (!value) {
      this.content = null;
    }
  }

  public String getType() {
    return this.type;
  }

  public AppNewsInfo setType(String type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  public String getResource_type() {
    return this.resource_type;
  }

  public AppNewsInfo setResource_type(String resource_type) {
    this.resource_type = resource_type;
    return this;
  }

  public void unsetResource_type() {
    this.resource_type = null;
  }

  /** Returns true if field resource_type is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_type() {
    return this.resource_type != null;
  }

  public void setResource_typeIsSet(boolean value) {
    if (!value) {
      this.resource_type = null;
    }
  }

  public String getResource_sub_type() {
    return this.resource_sub_type;
  }

  public AppNewsInfo setResource_sub_type(String resource_sub_type) {
    this.resource_sub_type = resource_sub_type;
    return this;
  }

  public void unsetResource_sub_type() {
    this.resource_sub_type = null;
  }

  /** Returns true if field resource_sub_type is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_sub_type() {
    return this.resource_sub_type != null;
  }

  public void setResource_sub_typeIsSet(boolean value) {
    if (!value) {
      this.resource_sub_type = null;
    }
  }

  public String getCustom_title() {
    return this.custom_title;
  }

  public AppNewsInfo setCustom_title(String custom_title) {
    this.custom_title = custom_title;
    return this;
  }

  public void unsetCustom_title() {
    this.custom_title = null;
  }

  /** Returns true if field custom_title is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_title() {
    return this.custom_title != null;
  }

  public void setCustom_titleIsSet(boolean value) {
    if (!value) {
      this.custom_title = null;
    }
  }

  public String getCustom_photo() {
    return this.custom_photo;
  }

  public AppNewsInfo setCustom_photo(String custom_photo) {
    this.custom_photo = custom_photo;
    return this;
  }

  public void unsetCustom_photo() {
    this.custom_photo = null;
  }

  /** Returns true if field custom_photo is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_photo() {
    return this.custom_photo != null;
  }

  public void setCustom_photoIsSet(boolean value) {
    if (!value) {
      this.custom_photo = null;
    }
  }

  public String getCustom_url() {
    return this.custom_url;
  }

  public AppNewsInfo setCustom_url(String custom_url) {
    this.custom_url = custom_url;
    return this;
  }

  public void unsetCustom_url() {
    this.custom_url = null;
  }

  /** Returns true if field custom_url is set (has been assigned a value) and false otherwise */
  public boolean isSetCustom_url() {
    return this.custom_url != null;
  }

  public void setCustom_urlIsSet(boolean value) {
    if (!value) {
      this.custom_url = null;
    }
  }

  public int getResource_id() {
    return this.resource_id;
  }

  public AppNewsInfo setResource_id(int resource_id) {
    this.resource_id = resource_id;
    setResource_idIsSet(true);
    return this;
  }

  public void unsetResource_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESOURCE_ID_ISSET_ID);
  }

  /** Returns true if field resource_id is set (has been assigned a value) and false otherwise */
  public boolean isSetResource_id() {
    return EncodingUtils.testBit(__isset_bitfield, __RESOURCE_ID_ISSET_ID);
  }

  public void setResource_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESOURCE_ID_ISSET_ID, value);
  }

  public int getSend_from_id() {
    return this.send_from_id;
  }

  public AppNewsInfo setSend_from_id(int send_from_id) {
    this.send_from_id = send_from_id;
    setSend_from_idIsSet(true);
    return this;
  }

  public void unsetSend_from_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEND_FROM_ID_ISSET_ID);
  }

  /** Returns true if field send_from_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSend_from_id() {
    return EncodingUtils.testBit(__isset_bitfield, __SEND_FROM_ID_ISSET_ID);
  }

  public void setSend_from_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEND_FROM_ID_ISSET_ID, value);
  }

  public String getValid_time() {
    return this.valid_time;
  }

  public AppNewsInfo setValid_time(String valid_time) {
    this.valid_time = valid_time;
    return this;
  }

  public void unsetValid_time() {
    this.valid_time = null;
  }

  /** Returns true if field valid_time is set (has been assigned a value) and false otherwise */
  public boolean isSetValid_time() {
    return this.valid_time != null;
  }

  public void setValid_timeIsSet(boolean value) {
    if (!value) {
      this.valid_time = null;
    }
  }

  public String getCreated() {
    return this.created;
  }

  public AppNewsInfo setCreated(String created) {
    this.created = created;
    return this;
  }

  public void unsetCreated() {
    this.created = null;
  }

  /** Returns true if field created is set (has been assigned a value) and false otherwise */
  public boolean isSetCreated() {
    return this.created != null;
  }

  public void setCreatedIsSet(boolean value) {
    if (!value) {
      this.created = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case CONTENT:
      if (value == null) {
        unsetContent();
      } else {
        setContent((String)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((String)value);
      }
      break;

    case RESOURCE_TYPE:
      if (value == null) {
        unsetResource_type();
      } else {
        setResource_type((String)value);
      }
      break;

    case RESOURCE_SUB_TYPE:
      if (value == null) {
        unsetResource_sub_type();
      } else {
        setResource_sub_type((String)value);
      }
      break;

    case CUSTOM_TITLE:
      if (value == null) {
        unsetCustom_title();
      } else {
        setCustom_title((String)value);
      }
      break;

    case CUSTOM_PHOTO:
      if (value == null) {
        unsetCustom_photo();
      } else {
        setCustom_photo((String)value);
      }
      break;

    case CUSTOM_URL:
      if (value == null) {
        unsetCustom_url();
      } else {
        setCustom_url((String)value);
      }
      break;

    case RESOURCE_ID:
      if (value == null) {
        unsetResource_id();
      } else {
        setResource_id((Integer)value);
      }
      break;

    case SEND_FROM_ID:
      if (value == null) {
        unsetSend_from_id();
      } else {
        setSend_from_id((Integer)value);
      }
      break;

    case VALID_TIME:
      if (value == null) {
        unsetValid_time();
      } else {
        setValid_time((String)value);
      }
      break;

    case CREATED:
      if (value == null) {
        unsetCreated();
      } else {
        setCreated((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case CONTENT:
      return getContent();

    case TYPE:
      return getType();

    case RESOURCE_TYPE:
      return getResource_type();

    case RESOURCE_SUB_TYPE:
      return getResource_sub_type();

    case CUSTOM_TITLE:
      return getCustom_title();

    case CUSTOM_PHOTO:
      return getCustom_photo();

    case CUSTOM_URL:
      return getCustom_url();

    case RESOURCE_ID:
      return getResource_id();

    case SEND_FROM_ID:
      return getSend_from_id();

    case VALID_TIME:
      return getValid_time();

    case CREATED:
      return getCreated();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case CONTENT:
      return isSetContent();
    case TYPE:
      return isSetType();
    case RESOURCE_TYPE:
      return isSetResource_type();
    case RESOURCE_SUB_TYPE:
      return isSetResource_sub_type();
    case CUSTOM_TITLE:
      return isSetCustom_title();
    case CUSTOM_PHOTO:
      return isSetCustom_photo();
    case CUSTOM_URL:
      return isSetCustom_url();
    case RESOURCE_ID:
      return isSetResource_id();
    case SEND_FROM_ID:
      return isSetSend_from_id();
    case VALID_TIME:
      return isSetValid_time();
    case CREATED:
      return isSetCreated();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AppNewsInfo)
      return this.equals((AppNewsInfo)that);
    return false;
  }

  public boolean equals(AppNewsInfo that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_content = true && this.isSetContent();
    boolean that_present_content = true && that.isSetContent();
    if (this_present_content || that_present_content) {
      if (!(this_present_content && that_present_content))
        return false;
      if (!this.content.equals(that.content))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_resource_type = true && this.isSetResource_type();
    boolean that_present_resource_type = true && that.isSetResource_type();
    if (this_present_resource_type || that_present_resource_type) {
      if (!(this_present_resource_type && that_present_resource_type))
        return false;
      if (!this.resource_type.equals(that.resource_type))
        return false;
    }

    boolean this_present_resource_sub_type = true && this.isSetResource_sub_type();
    boolean that_present_resource_sub_type = true && that.isSetResource_sub_type();
    if (this_present_resource_sub_type || that_present_resource_sub_type) {
      if (!(this_present_resource_sub_type && that_present_resource_sub_type))
        return false;
      if (!this.resource_sub_type.equals(that.resource_sub_type))
        return false;
    }

    boolean this_present_custom_title = true && this.isSetCustom_title();
    boolean that_present_custom_title = true && that.isSetCustom_title();
    if (this_present_custom_title || that_present_custom_title) {
      if (!(this_present_custom_title && that_present_custom_title))
        return false;
      if (!this.custom_title.equals(that.custom_title))
        return false;
    }

    boolean this_present_custom_photo = true && this.isSetCustom_photo();
    boolean that_present_custom_photo = true && that.isSetCustom_photo();
    if (this_present_custom_photo || that_present_custom_photo) {
      if (!(this_present_custom_photo && that_present_custom_photo))
        return false;
      if (!this.custom_photo.equals(that.custom_photo))
        return false;
    }

    boolean this_present_custom_url = true && this.isSetCustom_url();
    boolean that_present_custom_url = true && that.isSetCustom_url();
    if (this_present_custom_url || that_present_custom_url) {
      if (!(this_present_custom_url && that_present_custom_url))
        return false;
      if (!this.custom_url.equals(that.custom_url))
        return false;
    }

    boolean this_present_resource_id = true;
    boolean that_present_resource_id = true;
    if (this_present_resource_id || that_present_resource_id) {
      if (!(this_present_resource_id && that_present_resource_id))
        return false;
      if (this.resource_id != that.resource_id)
        return false;
    }

    boolean this_present_send_from_id = true;
    boolean that_present_send_from_id = true;
    if (this_present_send_from_id || that_present_send_from_id) {
      if (!(this_present_send_from_id && that_present_send_from_id))
        return false;
      if (this.send_from_id != that.send_from_id)
        return false;
    }

    boolean this_present_valid_time = true && this.isSetValid_time();
    boolean that_present_valid_time = true && that.isSetValid_time();
    if (this_present_valid_time || that_present_valid_time) {
      if (!(this_present_valid_time && that_present_valid_time))
        return false;
      if (!this.valid_time.equals(that.valid_time))
        return false;
    }

    boolean this_present_created = true && this.isSetCreated();
    boolean that_present_created = true && that.isSetCreated();
    if (this_present_created || that_present_created) {
      if (!(this_present_created && that_present_created))
        return false;
      if (!this.created.equals(that.created))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_content = true && (isSetContent());
    list.add(present_content);
    if (present_content)
      list.add(content);

    boolean present_type = true && (isSetType());
    list.add(present_type);
    if (present_type)
      list.add(type);

    boolean present_resource_type = true && (isSetResource_type());
    list.add(present_resource_type);
    if (present_resource_type)
      list.add(resource_type);

    boolean present_resource_sub_type = true && (isSetResource_sub_type());
    list.add(present_resource_sub_type);
    if (present_resource_sub_type)
      list.add(resource_sub_type);

    boolean present_custom_title = true && (isSetCustom_title());
    list.add(present_custom_title);
    if (present_custom_title)
      list.add(custom_title);

    boolean present_custom_photo = true && (isSetCustom_photo());
    list.add(present_custom_photo);
    if (present_custom_photo)
      list.add(custom_photo);

    boolean present_custom_url = true && (isSetCustom_url());
    list.add(present_custom_url);
    if (present_custom_url)
      list.add(custom_url);

    boolean present_resource_id = true;
    list.add(present_resource_id);
    if (present_resource_id)
      list.add(resource_id);

    boolean present_send_from_id = true;
    list.add(present_send_from_id);
    if (present_send_from_id)
      list.add(send_from_id);

    boolean present_valid_time = true && (isSetValid_time());
    list.add(present_valid_time);
    if (present_valid_time)
      list.add(valid_time);

    boolean present_created = true && (isSetCreated());
    list.add(present_created);
    if (present_created)
      list.add(created);

    return list.hashCode();
  }

  @Override
  public int compareTo(AppNewsInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContent()).compareTo(other.isSetContent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.content, other.content);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource_type()).compareTo(other.isSetResource_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_type, other.resource_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource_sub_type()).compareTo(other.isSetResource_sub_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_sub_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_sub_type, other.resource_sub_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustom_title()).compareTo(other.isSetCustom_title());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_title()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_title, other.custom_title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustom_photo()).compareTo(other.isSetCustom_photo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_photo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_photo, other.custom_photo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCustom_url()).compareTo(other.isSetCustom_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCustom_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.custom_url, other.custom_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResource_id()).compareTo(other.isSetResource_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResource_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resource_id, other.resource_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSend_from_id()).compareTo(other.isSetSend_from_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSend_from_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.send_from_id, other.send_from_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValid_time()).compareTo(other.isSetValid_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValid_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.valid_time, other.valid_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreated()).compareTo(other.isSetCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.created, other.created);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AppNewsInfo(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("content:");
    if (this.content == null) {
      sb.append("null");
    } else {
      sb.append(this.content);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_type:");
    if (this.resource_type == null) {
      sb.append("null");
    } else {
      sb.append(this.resource_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_sub_type:");
    if (this.resource_sub_type == null) {
      sb.append("null");
    } else {
      sb.append(this.resource_sub_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("custom_title:");
    if (this.custom_title == null) {
      sb.append("null");
    } else {
      sb.append(this.custom_title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("custom_photo:");
    if (this.custom_photo == null) {
      sb.append("null");
    } else {
      sb.append(this.custom_photo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("custom_url:");
    if (this.custom_url == null) {
      sb.append("null");
    } else {
      sb.append(this.custom_url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("resource_id:");
    sb.append(this.resource_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("send_from_id:");
    sb.append(this.send_from_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("valid_time:");
    if (this.valid_time == null) {
      sb.append("null");
    } else {
      sb.append(this.valid_time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("created:");
    if (this.created == null) {
      sb.append("null");
    } else {
      sb.append(this.created);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AppNewsInfoStandardSchemeFactory implements SchemeFactory {
    public AppNewsInfoStandardScheme getScheme() {
      return new AppNewsInfoStandardScheme();
    }
  }

  private static class AppNewsInfoStandardScheme extends StandardScheme<AppNewsInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AppNewsInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CONTENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.content = iprot.readString();
              struct.setContentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.type = iprot.readString();
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RESOURCE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resource_type = iprot.readString();
              struct.setResource_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RESOURCE_SUB_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resource_sub_type = iprot.readString();
              struct.setResource_sub_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CUSTOM_TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_title = iprot.readString();
              struct.setCustom_titleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CUSTOM_PHOTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_photo = iprot.readString();
              struct.setCustom_photoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CUSTOM_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.custom_url = iprot.readString();
              struct.setCustom_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RESOURCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.resource_id = iprot.readI32();
              struct.setResource_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SEND_FROM_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.send_from_id = iprot.readI32();
              struct.setSend_from_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // VALID_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.valid_time = iprot.readString();
              struct.setValid_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.created = iprot.readString();
              struct.setCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AppNewsInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.content != null) {
        oprot.writeFieldBegin(CONTENT_FIELD_DESC);
        oprot.writeString(struct.content);
        oprot.writeFieldEnd();
      }
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeString(struct.type);
        oprot.writeFieldEnd();
      }
      if (struct.resource_type != null) {
        oprot.writeFieldBegin(RESOURCE_TYPE_FIELD_DESC);
        oprot.writeString(struct.resource_type);
        oprot.writeFieldEnd();
      }
      if (struct.resource_sub_type != null) {
        oprot.writeFieldBegin(RESOURCE_SUB_TYPE_FIELD_DESC);
        oprot.writeString(struct.resource_sub_type);
        oprot.writeFieldEnd();
      }
      if (struct.custom_title != null) {
        oprot.writeFieldBegin(CUSTOM_TITLE_FIELD_DESC);
        oprot.writeString(struct.custom_title);
        oprot.writeFieldEnd();
      }
      if (struct.custom_photo != null) {
        oprot.writeFieldBegin(CUSTOM_PHOTO_FIELD_DESC);
        oprot.writeString(struct.custom_photo);
        oprot.writeFieldEnd();
      }
      if (struct.custom_url != null) {
        oprot.writeFieldBegin(CUSTOM_URL_FIELD_DESC);
        oprot.writeString(struct.custom_url);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RESOURCE_ID_FIELD_DESC);
      oprot.writeI32(struct.resource_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SEND_FROM_ID_FIELD_DESC);
      oprot.writeI32(struct.send_from_id);
      oprot.writeFieldEnd();
      if (struct.valid_time != null) {
        oprot.writeFieldBegin(VALID_TIME_FIELD_DESC);
        oprot.writeString(struct.valid_time);
        oprot.writeFieldEnd();
      }
      if (struct.created != null) {
        oprot.writeFieldBegin(CREATED_FIELD_DESC);
        oprot.writeString(struct.created);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AppNewsInfoTupleSchemeFactory implements SchemeFactory {
    public AppNewsInfoTupleScheme getScheme() {
      return new AppNewsInfoTupleScheme();
    }
  }

  private static class AppNewsInfoTupleScheme extends TupleScheme<AppNewsInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AppNewsInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetContent()) {
        optionals.set(1);
      }
      if (struct.isSetType()) {
        optionals.set(2);
      }
      if (struct.isSetResource_type()) {
        optionals.set(3);
      }
      if (struct.isSetResource_sub_type()) {
        optionals.set(4);
      }
      if (struct.isSetCustom_title()) {
        optionals.set(5);
      }
      if (struct.isSetCustom_photo()) {
        optionals.set(6);
      }
      if (struct.isSetCustom_url()) {
        optionals.set(7);
      }
      if (struct.isSetResource_id()) {
        optionals.set(8);
      }
      if (struct.isSetSend_from_id()) {
        optionals.set(9);
      }
      if (struct.isSetValid_time()) {
        optionals.set(10);
      }
      if (struct.isSetCreated()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetContent()) {
        oprot.writeString(struct.content);
      }
      if (struct.isSetType()) {
        oprot.writeString(struct.type);
      }
      if (struct.isSetResource_type()) {
        oprot.writeString(struct.resource_type);
      }
      if (struct.isSetResource_sub_type()) {
        oprot.writeString(struct.resource_sub_type);
      }
      if (struct.isSetCustom_title()) {
        oprot.writeString(struct.custom_title);
      }
      if (struct.isSetCustom_photo()) {
        oprot.writeString(struct.custom_photo);
      }
      if (struct.isSetCustom_url()) {
        oprot.writeString(struct.custom_url);
      }
      if (struct.isSetResource_id()) {
        oprot.writeI32(struct.resource_id);
      }
      if (struct.isSetSend_from_id()) {
        oprot.writeI32(struct.send_from_id);
      }
      if (struct.isSetValid_time()) {
        oprot.writeString(struct.valid_time);
      }
      if (struct.isSetCreated()) {
        oprot.writeString(struct.created);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AppNewsInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.content = iprot.readString();
        struct.setContentIsSet(true);
      }
      if (incoming.get(2)) {
        struct.type = iprot.readString();
        struct.setTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.resource_type = iprot.readString();
        struct.setResource_typeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.resource_sub_type = iprot.readString();
        struct.setResource_sub_typeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.custom_title = iprot.readString();
        struct.setCustom_titleIsSet(true);
      }
      if (incoming.get(6)) {
        struct.custom_photo = iprot.readString();
        struct.setCustom_photoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.custom_url = iprot.readString();
        struct.setCustom_urlIsSet(true);
      }
      if (incoming.get(8)) {
        struct.resource_id = iprot.readI32();
        struct.setResource_idIsSet(true);
      }
      if (incoming.get(9)) {
        struct.send_from_id = iprot.readI32();
        struct.setSend_from_idIsSet(true);
      }
      if (incoming.get(10)) {
        struct.valid_time = iprot.readString();
        struct.setValid_timeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.created = iprot.readString();
        struct.setCreatedIsSet(true);
      }
    }
  }

}

